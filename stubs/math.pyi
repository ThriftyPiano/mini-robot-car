# MicroPython math module stub
from typing import Union

# Constants
pi: float
e: float
tau: float
inf: float
nan: float

def acos(x: float) -> float: ...
def asin(x: float) -> float: ...
def atan(x: float) -> float: ...
def atan2(y: float, x: float) -> float: ...
def ceil(x: float) -> int: ...
def copysign(x: float, y: float) -> float: ...
def cos(x: float) -> float: ...
def degrees(x: float) -> float: ...
def exp(x: float) -> float: ...
def fabs(x: float) -> float: ...
def floor(x: float) -> int: ...
def fmod(x: float, y: float) -> float: ...
def frexp(x: float) -> tuple[float, int]: ...
def isfinite(x: float) -> bool: ...
def isinf(x: float) -> bool: ...
def isnan(x: float) -> bool: ...
def ldexp(x: float, i: int) -> float: ...
def log(x: float, base: float = e) -> float: ...
def log10(x: float) -> float: ...
def log2(x: float) -> float: ...
def modf(x: float) -> tuple[float, float]: ...
def pow(x: float, y: float) -> float: ...
def radians(x: float) -> float: ...
def sin(x: float) -> float: ...
def sqrt(x: float) -> float: ...
def tan(x: float) -> float: ...
def trunc(x: float) -> int: ...
